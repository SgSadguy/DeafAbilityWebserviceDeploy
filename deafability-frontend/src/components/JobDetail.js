// src/components/JobDetail.js
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from './utils/api';
import './CourseDetail.css'; // reuse ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
import logo from '../assets/logo_nobg.png';
import DropdownNav from './DropdownNav';


const JobDetail = () => {
  const navigate = useNavigate();
  const { id } = useParams();           // job id ‡∏à‡∏≤‡∏Å route
  const [job, setJob] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchData = async () => {
      try {
        setLoading(true);
        const res = await axios.get(`/jobs/${id}/`);
        setJob(res.data);
        setError(null);
      } catch (err) {
        console.error('Error fetching job detail:', err);
        setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
      } finally {
        setLoading(false);
      }
    };
    fetchData();
  }, [id]);

  // const fetchJobDetail = async () => {
  //   try {
  //     setLoading(true);
  //     const res = await axios.get(`/api/jobs/${id}/`);
  //     setJob(res.data);
  //     setError(null);
  //   } catch (err) {
  //     console.error('Error fetching job detail:', err);
  //     setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
  //   } finally {
  //     setLoading(false);
  //   }
  // };

  const handleBackClick = () => {
    navigate('/jobs'); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô (JobsPage)
  };

  const handleCourseClick = (courseId) => {
    navigate(`/course/${courseId}`); // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
  };

  if (loading) {
    return (
      <div className="container">
        <div className="loading">
          <p>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="container">
        <div className="error">
          <p>‚ùå {error}</p>
          <button onClick={handleBackClick} className="back-button">
            ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ Jobs
          </button>
        </div>
      </div>
    );
  }

  if (!job) {
    return (
      <div className="container">
        <div className="no-courses">
          <p>üì≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</p>
          <button onClick={handleBackClick} className="back-button">
            ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ Jobs
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="home-container">
      <header className="job-header" role="banner"> 
                <div className="brand"> 
                    <img src={logo} alt="DeafAbility Logo" className="logo" />
                </div>

    {/* Dropdown Navbar */}

    <DropdownNav />
  </header>

      <div className="course-detail">

        <div className="course-detail-card">
          <h2 className="course-detail-title">{job.title}</h2>

          <div className="course-detail-info">
            <div className="info-item">
              <span className="info-label">üß≠ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</span>
              <span className="info-value">{job.position_type || '‚Äî'}</span>
            </div>
            <div className="info-item">
              <span className="info-label">üïí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠:</span>
              <span className="info-value">
                {job.created_at ? new Date(job.created_at).toLocaleString() : '‚Äî'}
              </span>
            </div>
          </div>

          {job.description && (
            <div className="course-description">
              <h3>üìù ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô</h3>
              <p>{job.description}</p>
            </div>
          )}

          <div className="lessons-section">
            <h3>üìö ‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á</h3>
            {(!job.courses || job.courses.length === 0) ? (
              <p>‚Äî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÑ‡∏ß‡πâ ‚Äî</p>
            ) : (
              <div className="lessons-list">
                {job.courses.map((c, index) => (
                  <div
                    key={c.id}
                    className="lesson-item"
                    onClick={() => handleCourseClick(c.id)}
                    style={{ cursor: 'pointer' }}
                  >
                    <div className="lesson-number">{index + 1}</div>
                    <div className="lesson-content">
                      <h4 className="lesson-title">{c.name}</h4>
                      <p className="lesson-description">
                        üìä {c.level} ‚Ä¢ üè∑Ô∏è {c.category}
                      </p>
                    </div>
                    <div className="lesson-arrow">‚Üí</div>
                  </div>
                ))}
              </div>
            )}
          </div>

          <div className="course-actions">
            <button onClick={handleBackClick} className="back-button">
              ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ Jobs
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default JobDetail;
