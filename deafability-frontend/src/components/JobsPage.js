// src/components/JobsPage.js
import React, { useEffect, useMemo, useState } from 'react';
import { useNavigate, useSearchParams } from 'react-router-dom';
import axios from './utils/api';

export default function JobsPage() {
  const navigate = useNavigate();
  const [searchParams, setSearchParams] = useSearchParams();

  // data
  const [jobs, setJobs] = useState([]);
  const [activeJob, setActiveJob] = useState(null);

  // ui states
  const [loading, setLoading] = useState(true);
  const [loadingDetail, setLoadingDetail] = useState(false);
  const [error, setError] = useState(null);

  // filters (sync ‡∏Å‡∏±‡∏ö query string)
  const [q, setQ] = useState(searchParams.get('q') || '');
  const [pos, setPos] = useState(searchParams.get('position_type') || '');

  // ‡πÇ‡∏´‡∏•‡∏î list (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö q / position_type)
  useEffect(() => {
    const load = async () => {
      try {
        setLoading(true);
        const params = {};
        if (q) params.q = q;
        if (pos) params.position_type = pos;
        
        const res = await axios.get('/api/jobs/', { params });
        
        // **********************************************
        // 1. ‡∏à‡∏∏‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÅ‡∏õ‡∏•‡∏á response ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô array ‡∏Å‡πà‡∏≠‡∏ô setJobs
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Array? ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà ‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏°‡∏µ .results ‡∏°‡∏±‡πâ‡∏¢? ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Array ‡∏ß‡πà‡∏≤‡∏á []
        const items = Array.isArray(res.data) ? res.data : (res.data?.results ?? []);
        setJobs(items);
        // **********************************************
        
        setError(null);

        // sync query ‡πÉ‡∏ô URL
        const next = {};
        if (q) next.q = q;
        if (pos) next.position_type = pos;
        setSearchParams(next, { replace: true });

        // **********************************************
        // 2. ‡∏à‡∏∏‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á 'items' ‡πÅ‡∏ó‡∏ô 'res.data'
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏≠‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        if (!activeJob && items.length > 0) {
          handleSelect(items[0].id);
        } else if (items.length === 0) {
          setActiveJob(null);
        }
        // **********************************************

      } catch (e) {
        console.error(e);
        setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
        // **********************************************
        // ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå jobs ‡∏î‡πâ‡∏ß‡∏¢
        setJobs([]); 
        // **********************************************
      } finally {
        setLoading(false);
      }
    };
    load();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [q, pos]);

  const handleSelect = async (jobId) => {
    try {
      setLoadingDetail(true);
      const res = await axios.get(`/api/jobs/${jobId}/`);
      setActiveJob(res.data || null);
    } catch (e) {
      console.error(e);
    } finally {
      setLoadingDetail(false);
    }
  };

  // **********************************************
  // 3. ‡∏à‡∏∏‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: useMemo ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ jobs ‡πÄ‡∏õ‡πá‡∏ô Array
  const positionOptions = useMemo(() => {
    const arr = Array.isArray(jobs) ? jobs : [];
    const set = new Set(arr.map(j => (j.position_type || '').trim()).filter(Boolean));
    return Array.from(set);
  }, [jobs]);
  // **********************************************

  return (
    <div className="container">
      {/* Header reuse ‡πÄ‡∏î‡∏¥‡∏° */}
      <div className="header">
        <h1>üíº DeafAbility Jobs</h1>
        <p>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß</p>
      </div>

      {/* ‡πÅ‡∏ñ‡∏ö‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤/‡∏Å‡∏£‡∏≠‡∏á */}
      <div className="filter-section">
        <div className="filter-row">
          <input
            type="text"
            className="search-input"
            placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (‡∏ä‡∏∑‡πà‡∏≠‡∏á‡∏≤‡∏ô/‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î/‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏£‡πå‡∏™)"
            value={q}
            onChange={(e) => setQ(e.target.value)}
          />
        </div>
        <div className="filter-row">
          <select
            className="filter-select"
            value={pos}
            onChange={(e) => setPos(e.target.value)}
          >
            <option value="">üß≠ ‡∏ó‡∏∏‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</option>
            {positionOptions.map(p => (
              <option key={p} value={p}>{p}</option>
            ))}
          </select>
        </div>
        <div className="filter-info">
          <p>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô: {jobs.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
        </div>
      </div>

      {/* ‡πÅ‡∏ö‡πà‡∏á 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: ‡∏ã‡πâ‡∏≤‡∏¢‡∏•‡∏¥‡∏™‡∏ï‡πå / ‡∏Ç‡∏ß‡∏≤‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
      <div style={{ display: 'grid', gridTemplateColumns: '1.2fr 1.8fr', gap: 16 }}>
        {/* ‡∏ã‡πâ‡∏≤‡∏¢: ‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏á‡∏≤‡∏ô */}
        <div>
          {loading ? (
            <div className="loading"><h3>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô...</h3></div>
          ) : error ? (
            <div className="error"><p>‚ùå {error}</p></div>
          ) : jobs.length === 0 ? (
            <div className="no-courses"><p>üì≠ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç</p></div>
          ) : (
            <div className="course-grid" style={{ gridTemplateColumns: '1fr' }}>
              {jobs.map(job => {
                const isActive = activeJob?.id === job.id;
                return (
                  <div
                    key={job.id}
                    className="course-card"
                    onClick={() => handleSelect(job.id)}
                    style={{
                      border: isActive ? '2px solid #444' : undefined,
                      cursor: 'pointer'
                    }}
                  >
                    <div className="course-title">{job.title}</div>
                    <div className="course-info">
                      <strong>üß≠ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</strong> {job.position_type || '‚Äî'}
                    </div>
                    {job.description && (
                      <div className="course-description">
                        {job.description.length > 120
                          ? job.description.slice(0, 120) + '‚Ä¶'
                          : job.description}
                      </div>
                    )}
                  </div>
                );
              })}
            </div>
          )}
        </div>

        {/* ‡∏Ç‡∏ß‡∏≤: ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
        <div>
          {!activeJob ? (
            <div className="no-courses"><p>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</p></div>
          ) : (
            <div className="course-detail-card">
              <h2 className="course-detail-title">{activeJob.title}</h2>
              <div className="course-detail-info">
                <div className="info-item">
                  <span className="info-label">üß≠ ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:</span>
                  <span className="info-value">{activeJob.position_type || '‚Äî'}</span>
                </div>
                <div className="info-item">
                  <span className="info-label">üïí ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠:</span>
                  <span className="info-value">
                    {new Date(activeJob.created_at).toLocaleString()}
                  </span>
                </div>
              </div>

              {loadingDetail ? (
                <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î...</p>
              ) : (
                <>
                  {activeJob.description && (
                    <div className="course-description" style={{ marginTop: 12 }}>
                      <h3>üìù ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô</h3>
                      <p>{activeJob.description}</p>
                    </div>
                  )}

                  <div className="lessons-section" style={{ marginTop: 16 }}>
                    <h3>üìö ‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á</h3>
                    {(!activeJob.courses || activeJob.courses.length === 0) ? (
                      <p>‚Äî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÑ‡∏ß‡πâ ‚Äî</p>
                    ) : (
                      <div className="lessons-list">
                        {activeJob.courses.map((c, idx) => (
                          <div
                            key={c.id}
                            className="lesson-item"
                            onClick={() => navigate(`/course/${c.id}`)}
                            style={{ cursor: 'pointer' }}
                          >
                            <div className="lesson-number">{idx + 1}</div>
                            <div className="lesson-content">
                              <h4 className="lesson-title">{c.name}</h4>
                              <p className="lesson-description">
                                üìä {c.level} ‚Ä¢ üè∑Ô∏è {c.category}
                              </p>
                            </div>
                            <div className="lesson-arrow">‚Üí</div>
                          </div>
                        ))}
                      </div>
                    )}
                  </div>
                </>
              )}
            </div>
          )}
        </div>
      </div>
    </div>
  );
}